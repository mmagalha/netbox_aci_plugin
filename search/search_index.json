{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NetBox ACI Plugin","text":"<p>The NetBox plugin for Cisco ACI allows NetBox to document ACI specific objects like Tenants (TN), Application Profiles (AP), Endpoint Groups (EPG), Bridge Domains (BD) and Contexts (CTX) / Virtual Routing and Forwarding (VRF).</p> <p>Documentation: https://pheus.github.io/netbox-aci-plugin/</p>"},{"location":"#Features","title":"Features","text":"<ul> <li>Tenants</li> <li>Application Profiles</li> <li>Endpoint Groups</li> <li>Bridge Domains</li> <li>VRF</li> <li>Contracts</li> <li>Contract Subjects</li> <li>Contract Filters</li> </ul>"},{"location":"#Compatibility","title":"Compatibility","text":"NetBox Version Plugin Version 4.2 0.0.11"},{"location":"#Installing","title":"Installing","text":"<p>For adding to a NetBox Docker setup, see the general instructions for using netbox-docker with plugins.</p> <p>While this is still in development and not yet on pypi, you can install with pip:</p> <pre><code>pip install git+https://github.com/pheus/netbox-aci-plugin\n</code></pre> <p>or by adding to your <code>local_requirements.txt</code> or <code>plugin_requirements.txt</code> (netbox-docker):</p> <pre><code>git+https://github.com/pheus/netbox-aci-plugin\n</code></pre> <p>Enable the plugin in <code>/opt/netbox/netbox/netbox/configuration.py</code>,  or if you use netbox-docker, your <code>/configuration/plugins.py</code> file :</p> <pre><code>PLUGINS = [\n    'netbox_aci_plugin'\n]\n\nPLUGINS_CONFIG = {\n    \"netbox_aci_plugin\": {\n        # create default ACI Tenants \"common\", \"infra\", \"mgmt\" during migration\n        \"create_default_aci_tenants\": True,\n        # create default ACI Filters \"arp\", \"icmp\", \"ip\" during migration\n        \"create_default_aci_contract_filters\": True,\n    },\n}\n</code></pre>"},{"location":"#Status","title":"Status","text":"<p>This project has just started and provides a minimal set of ACI object features. It may contain bugs and it is missing features. At the current stage, the plugin should be used in testing environment only.</p>"},{"location":"#Release-notes","title":"Release notes","text":"<p>See the changelog.</p>"},{"location":"#Licensing","title":"Licensing","text":"<p>GNU General Public License v3.0 or later.</p> <p>See LICENSE to see the full text.</p>"},{"location":"#Credits","title":"Credits","text":"<p>Based on the NetBox plugin tutorial:</p> <ul> <li>demo repository</li> <li>tutorial</li> </ul> <p>This package was created with Cookiecutter and the <code>netbox-community/cookiecutter-netbox-plugin</code> project template.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#010-unreleased","title":"0.1.0 (unreleased)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"changelog/#0011-2025-02-10","title":"0.0.11 (2025-02-10)","text":""},{"location":"changelog/#Breaking-Changes","title":"Breaking Changes","text":"<ul> <li>Requires NetBox version 4.2.0 or higher</li> </ul>"},{"location":"changelog/#Enhancements","title":"Enhancements","text":"<ul> <li>Add Contract Relations views to ACI Endpoint Group and ACI VRF</li> <li>Refactor view registration leveraging the <code>get_model_urls</code> utility   introduced in NetBox v4.2</li> <li>Refactors API serializers into separate modules for better organization</li> <li>Utilize <code>GetRelatedModelsMixin</code> for managing related models in   <code>ACITenantView</code></li> <li>Reorganizes the ACI menu into distinct groups for better clarity:   Tenants, Application Profiles, Networking and Contracts.</li> <li>Extracts common fields and methods into a new <code>ACIBaseModel</code> to reduce   duplicate code across ACI-related models</li> <li>Enhance GraphQL queries by adding support for related ACI objects</li> </ul>"},{"location":"changelog/#Bug-Fixes","title":"Bug Fixes","text":"<ul> <li>Rename the search index for ACI Contract Relation</li> <li>Fix <code>aci_object_id</code> field type supporting larger ID values</li> </ul>"},{"location":"changelog/#0010-2025-01-12","title":"0.0.10 (2025-01-12)","text":""},{"location":"changelog/#Breaking-Changes_1","title":"Breaking Changes","text":"<ul> <li>Requires NetBox version 4.1.5 or higher</li> </ul>"},{"location":"changelog/#Enhancements_1","title":"Enhancements","text":"<ul> <li>Add the ACI Contract Filter model, along with its forms and views</li> <li>Add the model, views and forms for the Entries in the ACI Contract Filter</li> <li>Move the Bridge Domain Subnet addition control to the Subnet table header</li> <li>Add the model, views and forms for ACI Contract Subject and its associated   Filters within the ACI Contract Subject</li> <li>Add support for relations between ACI objects (Endpoint Groups, VRFs) and   the ACI Contract via the ACIContractRelation model, views and forms</li> <li>Add NetBox v4.2 compatibility</li> </ul>"},{"location":"changelog/#Bug-Fixes_1","title":"Bug Fixes","text":"<ul> <li>Fix column headers of ACI Tenant and VRF fields for the Bridge Domain Subnet   table</li> </ul>"},{"location":"changelog/#009-2024-10-08","title":"0.0.9 (2024-10-08)","text":""},{"location":"changelog/#Breaking-Changes_2","title":"Breaking Changes","text":"<ul> <li>Requires NetBox version 4.1.0 or higher</li> </ul>"},{"location":"changelog/#Enhancements_2","title":"Enhancements","text":"<ul> <li>Add database migration for ACITenant</li> <li>Allow creation of default ACI Tenants (<code>common</code>, <code>infra</code>, <code>mgmt</code>) during   migration</li> <li>Add database migrations for ACIVRF, ACIBridgeDomain, ACIBridgeDomainSubnet</li> <li>Add database migrations for ACIAppProfile, ACIEndpointGroup</li> <li>Provide a plugin configuration option to disable the creation of the default   ACI Tenants</li> <li>Add support for GraphQL extended permissions in NetBox v4.0.10 and v4.0.11</li> <li>Add NetBox v4.1 compatibility</li> </ul>"},{"location":"changelog/#Bug-Fixes_2","title":"Bug Fixes","text":"<ul> <li>Fix OpenAPI schema generation warning for 'present_in_aci_tenant_or_common'   filter</li> <li>Include <code>_id</code> suffix for filter <code>present_in_aci_tenant_or_common</code></li> </ul>"},{"location":"changelog/#008-2024-07-17","title":"0.0.8 (2024-07-17)","text":""},{"location":"changelog/#Enhancements_3","title":"Enhancements","text":"<ul> <li>Rename plugin's verbose name to \"ACI\" for simplicity and better user   experience</li> <li>Allow referenced NetBox tenants to be deleted without raising a   ProtectedError</li> <li>Enable cascade deletion of ACI Bridge Domain Subnets when the parent ACI   Bridge Domain gets deleted</li> <li>Enhance tests for the models ACITenant, ACIVRF, ACIBridgeDomain,   ACIBridgeDomainSubnet, ACIAppProfile, ACIEndpointGroup</li> <li>Ensure ACI Bridge Domain assigned ACI VRF belongs to the same ACI Tenant or   to the special ACI Tenant 'common' on the model level</li> <li>Enforce ACI Endpoint Group assigned ACI Bridge Domain belongs to the same   ACI Tenant or the special ACI Tenant 'common' on the model level</li> </ul>"},{"location":"changelog/#Bug-Fixes_3","title":"Bug Fixes","text":"<ul> <li>Remove NetBox tenant filtering in the ACI object forms</li> </ul>"},{"location":"changelog/#007-2024-07-07","title":"0.0.7 (2024-07-07)","text":""},{"location":"changelog/#Enhancements_4","title":"Enhancements","text":"<ul> <li>Allow only one preferred (primary) gateway IP address per ACI Bridge Domain</li> <li>Enforce unique ACI Tenant name (following ACI policy model)</li> <li>Add ACI Tenant field to ACI Bridge Domain</li> <li>Remove ACI VRF requirement from ACI Endpoint Group import</li> <li>Allow ACI Bridge Domain assigning an ACI VRF from the same or from the   special \"common\" ACI Tenant</li> <li>Allow ACI Bridge Domain from special \"common\" ACI Tenant to be assigned to   the ACI Endpoint Group</li> <li>Add the ACI BD Subnets (Gateway IP addresses) column to the ACI Bridge Domain   table in the list view</li> </ul>"},{"location":"changelog/#Bug-Fixes_4","title":"Bug Fixes","text":"<ul> <li>Add a preferred IP address and virtual IP address to ACI Bridge Domain Subnet   template</li> <li>Fix unique ACI Bridge Domain Subnet name per ACI Bridge Domain</li> <li>Add type declaration to API serializer for MAC Address and Virtual MAC   Address of ACI Bridge Domain</li> <li>Add blank choices to FilterForms of ACI Bridge Domain, ACI Endpoint Group and   ACI VRF</li> <li>Fix multiple typos in comments, help texts and labels</li> </ul>"},{"location":"changelog/#006-2024-06-21","title":"0.0.6 (2024-06-21)","text":""},{"location":"changelog/#Enhancements_5","title":"Enhancements","text":"<ul> <li>Add bulk edit and delete views</li> <li>Add import views</li> <li>Add import buttons to navigation</li> <li>Add <code>add</code> and <code>view</code> permission handling in UI</li> <li>Add related names for NetBox models</li> </ul>"},{"location":"changelog/#Bug-Fixes_5","title":"Bug Fixes","text":"<ul> <li>Fix PIM IPv4 source filter verbose name</li> </ul>"},{"location":"changelog/#005-2024-06-07","title":"0.0.5 (2024-06-07)","text":""},{"location":"changelog/#Enhancements_6","title":"Enhancements","text":"<ul> <li>Add the ACI Endpoint Group model and views</li> <li>Prefill NetBox tenant while adding a new element through a ChildrenView</li> </ul>"},{"location":"changelog/#Bug-Fixes_6","title":"Bug Fixes","text":"<ul> <li>Fix typo in ACI Bridge Domain Subnet form for NetBox VRF</li> <li>Filter Bridge Domain choices based on ACI Tenant and/or ACI VRF in ACI Bridge   Domain Subnet form</li> <li>Fix typo in ChildrenView registration</li> <li>Use the relevant model class for the tag filter</li> </ul>"},{"location":"changelog/#004-2024-05-27","title":"0.0.4 (2024-05-27)","text":""},{"location":"changelog/#Enhancements_7","title":"Enhancements","text":"<ul> <li>Add an ACI Bridge Domain Subnet model and views</li> <li>Add ACI Bridge Domain tab to ACI Tenant</li> <li>Rename <code>alias</code> to <code>name_alias</code> following the ACI policy model</li> <li>Change related name of ACI VRF for ACI Bridge Domain to <code>aci_bridge_domains</code></li> </ul>"},{"location":"changelog/#Bug-Fixes_7","title":"Bug Fixes","text":"<ul> <li>Fix form query parameters for NetBox tenants</li> <li>Add blank choices to boolean fields for filter forms</li> <li>Add the NetBox tenant field to the ACI Bridge Domain form</li> </ul>"},{"location":"changelog/#003-2024-05-22","title":"0.0.3 (2024-05-22)","text":""},{"location":"changelog/#Enhancements_8","title":"Enhancements","text":"<ul> <li>Add the ACI Bridge Domain model and views</li> <li>Allow certain model fields to be cloned</li> </ul>"},{"location":"changelog/#002-2024-05-19","title":"0.0.2 (2024-05-19)","text":""},{"location":"changelog/#Enhancements_9","title":"Enhancements","text":"<ul> <li>Add the ACI Application Profile model and views</li> <li>Add ACI VRF model and views</li> <li>Add ACI Application Profile tab view to ACITenant</li> </ul>"},{"location":"changelog/#Bug-Fixes_8","title":"Bug Fixes","text":"<ul> <li>Allow translation of table headers</li> <li>Add placeholders in templates (for empty fields)</li> <li>Change model's url paths to plural</li> <li>Add length validator to alias and description</li> </ul>"},{"location":"changelog/#001-2024-05-09","title":"0.0.1 (2024-05-09)","text":""},{"location":"changelog/#Enhancements_10","title":"Enhancements","text":"<ul> <li>Add ACI Tenant model and views</li> <li>Support NetBox 4.0.0</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:</p> <ul> <li>Reporting a bug</li> <li>Discussing the current state of the code</li> <li>Submitting a fix</li> <li>Proposing new features</li> <li>Becoming a maintainer</li> </ul>"},{"location":"contributing/#General-Tips-for-Working-on-GitHub","title":"General Tips for Working on GitHub","text":"<ul> <li>Register for a free GitHub account if you haven't already.</li> <li>You can use GitHub Markdown for formatting text and adding images.</li> <li>To help mitigate notification spam, please avoid \"bumping\" issues with no   activity.   (To vote an issue up or down, use a  or  reaction.)</li> <li>Please avoid pinging members with <code>@</code> unless they've previously expressed   interest or involvement with that particular issue.</li> <li>Familiarize yourself with this list of discussion anti-patterns   and make every effort to avoid them.</li> </ul>"},{"location":"contributing/#Types-of-Contributions","title":"Types of Contributions","text":""},{"location":"contributing/#Report-Bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/pheus/netbox-aci-plugin/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#Fix-Bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#Implement-Features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#Write-Documentation","title":"Write Documentation","text":"<p>NetBox ACI Plugin could always use more documentation, whether as part of the official NetBox ACI Plugin docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#Submit-Feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/pheus/netbox-aci-plugin/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#Get-Started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>netbox-aci-plugin</code> for local development.</p> <ol> <li>Fork the <code>netbox-aci-plugin</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone git@github.com:your_name_here/netbox-aci-plugin.git\n</code></pre> </li> <li> <p>Activate the NetBox virtual environment (see the NetBox documentation under    Setting up a Development Environment):</p> <pre><code>$ source ~/.venv/netbox/bin/activate\n</code></pre> </li> <li> <p>Add the plugin to NetBox virtual environment in Develop mode    (see Plugins Development):</p> <p>To ease development, it is recommended to go ahead and install the plugin at this point using setuptools' develop mode.    This will create symbolic links within your Python environment to the plugin development directory. Call <code>pip</code> from the plugin's root directory with the <code>-e</code> (editable) flag:</p> <pre><code>$ pip3 install -e .\n</code></pre> <p>More information on editable builds can be found at Editable installs for pyproject.toml .</p> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#Pull-Request-Guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.10, 3.11 and 3.12.    Check    https://github.com/pheus/netbox-aci-plugin/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#Deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md) and that all tests pass. Then in the GitHub project go to <code>Releases</code> and create a new release with a new tag. This will automatically upload the release to pypi.</p>"},{"location":"features/tenants/","title":"Tenants","text":"<p>ACI fabric manages one or more Tenants based on the tenant portion of the hierarchical management information tree (MIT).</p> <pre><code>flowchart TD\n    TN([Tenant])\n    AP(Application Profile)\n    EPG(Endpoint Group)\n    VRF(VRF)\n    BD(Bridge Domain)\n    SN(Subnet)\n    CT(Contract)\n    CTR(Relation)\n    SJ(Subject)\n    SJF(Subject Filter)\n    FT(Filter)\n    FTE(Filter Entry)\n    subgraph graphTN [Tenant]\n        TN\n    end\n    subgraph graphAP [Application Profile]\n        TN --&gt;|1:n| AP\n        AP --&gt;|1:n| EPG\n    end\n    subgraph graphNW [Network]\n        subgraph graphBD [Bridge Domain]\n            TN --&gt;|1:n| BD\n            BD --&gt;|1:n| SN\n        end\n        BD -.-&gt;|n:1| VRF\n        TN --&gt;|1:n| VRF\n    end\n    subgraph graphCT [Contract]\n        subgraph graphCTS [Contract]\n            TN --&gt;|1:n| CT\n            CT --&gt;|1:n| SJ\n            CT --&gt;|1:n| CTR\n            SJ --&gt;|1:n| SJF\n        end\n        subgraph graphFT [Filter]\n            TN --&gt;|1:n| FT\n            FT --&gt;|1:n| FTE\n        end\n        SJF -.-&gt;|n:1| FT\n        CTR -.-&gt;|n:1| EPG\n        CTR -.-&gt;|n:1| VRF\n    end\n    EPG -.-&gt;|n:1| BD</code></pre>"},{"location":"features/tenants/#Tenant","title":"Tenant","text":"<p>A Tenant in the ACI policy model represents a container for application policies with domain-based access control. Tenants can be modeled after customers, organizations, domains, or used to group policies.</p> <p>The ACITenant model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Tenant name in the ACI.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI.</li> <li>Description: a description of the ACI Tenant.</li> <li>NetBox Tenant: an assignment to the NetBox tenant model.</li> <li>Comments: a text field for additional notes.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Application-Profile","title":"Application Profile","text":"<p>An Application Profile contains Endpoint Groups (EPGs) and may be modeled after applications, stages or domains.</p> <p>The ACIAppProfile model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Application Profile name in the ACI.</li> <li>ACI Tenant: a reference to the <code>ACITenant</code> model.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the Application Profile.</li> <li>Description: a description of the Application Profile.</li> <li>NetBox Tenant: a reference to the NetBox tenant model.</li> <li>Comments: a text field for additional notes.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#VRF","title":"VRF","text":"<p>A VRF (virtual routing and forwarding) instance defines a unique layer 3 forwarding, address and application policy domain for a Tenant. The layer 3 domain must have unique IP addresses. A Tenant can contain multiple VRFs. Bridge Domains are associated with a VRF.</p> <p>The ACIVRF model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the VRF name in the ACI.</li> <li>ACI Tenant: a reference to the <code>ACITenant</code> model.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the VRF.</li> <li>Description: a description of the VRF.</li> <li>NetBox Tenant: a reference to the NetBox tenant model.</li> <li>NetBox VRF: a reference to the NetBox vrf model.</li> <li>BD enforcement enabled: a boolean field, whether endpoints can ping other   bridge domain gateways.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>DNS labels: a comma-separated list of DNS labels.</li> <li>IP data plane learning enabled: a boolean field representing whether IP   data plane learning is enabled for the VRF.<ul> <li>Default: <code>true</code></li> </ul> </li> <li>PC enforcement direction: Direction of policy control enforcement.<ul> <li>Values: <code>ingress</code> (ingress), <code>egress</code> (egress)</li> <li>Default: <code>ingress</code></li> </ul> </li> <li>PC enforcement preference: Preference of policy control enforcement.<ul> <li>Values: <code>enforced</code> (enforced), <code>unenforced</code> (unenforced)</li> <li>Default: <code>enforced</code></li> </ul> </li> <li>PIM IPv4 enabled: a boolean field, whether IPv4 multicast is enabled.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>PIM IPv6 enabled: a boolean field, whether IPv6 multicast is enabled.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Preferred group enabled: a boolean field, if the preferred group feature   is enabled for the VRF.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Comments: a text field for additional notes.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Bridge-Domain","title":"Bridge Domain","text":"<p>A Bridge Domain represents layer 2 forwarding and flood domain defining a unique MAC address space. Each Bridge Domain must be linked to a VRF instance. One or more Subnets are associated with a Bridge Domain.</p> <p>The ACIBridgeDomain model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Bridge Domain name in the ACI.</li> <li>ACI Tenant: a reference to the <code>ACITenant</code> model.</li> <li>ACI VRF: a reference to the <code>ACIVRF</code> model.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the Bridge Domain.</li> <li>Description: a description of the Bridge Domain.</li> <li>NetBox Tenant: a reference to the NetBox tenant model.</li> <li>Advertise host routes enabled: a boolean field, whether associated   endpoints are advertised as host routes (/32 prefixes) out of the L3Outs.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>ARP flooding enabled: a boolean field representing the state, whether   Address Resolution Protocol (ARP) is flooded within the Bridge Domain.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Clear remote mac entries enabled: a boolean field, whether MAC endpoint   entries should be deleted on remote leaves, when endpoints are removed from   the local leaf.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>DHCP labels: a comma-separated list of DHCP labels.</li> <li>EP move detection enabled: a boolean field documenting the state of   endpoint move detection based on Gratuitous ARP (GARP).<ul> <li>Default: <code>false</code></li> </ul> </li> <li>IGMP interface policy name: the name of the IGMP interface policy.</li> <li>IGMP snooping policy name: the name of the IGMP snooping policy.</li> <li>IP data plane learning enabled: a boolean field representing whether IP   data plane learning is enabled for the Bridge Domain.<ul> <li>Default: <code>true</code></li> </ul> </li> <li>Limit IP learn enabled: a boolean field, if IP learning is limited to the   Bridge Domain's subnets.<ul> <li>Default: <code>true</code></li> </ul> </li> <li>MAC address: the MAC address of the Bridge Domain's gateway.<ul> <li>Default: <code>00:22:BD:F8:19:FF</code></li> </ul> </li> <li>Multi destination flooding: forwarding method for layer 2 multicast,   broadcast and link layer traffic.<ul> <li>Values: <code>bd-flood</code> (Bridge Domain flood),   <code>encap-flood</code> (encapsulation flood), <code>drop</code> (drop)</li> <li>Default: <code>bd-flood</code></li> </ul> </li> <li>PIM IPv4 enabled: a boolean field, whether IPv4 multicast is enabled.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>PIM IPv4 destination filter: the name of the PIM IPv4 destination filter.</li> <li>PIM IPv4 source filter: the name of the PIM IPv4 source filter.</li> <li>PIM IPv6 enabled: a boolean field, whether IPv6 multicast is enabled.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Unicast routing enabled: a boolean field, whether unicast routing is.   enabled.<ul> <li>Default: <code>true</code></li> </ul> </li> <li>Unknown IPv4 multicast: defines the IPv4 unknown multicast forwarding   method.<ul> <li>Values: <code>flood</code> (flood), <code>opt-flood</code> (optimized flood)</li> <li>Default: <code>flood</code></li> </ul> </li> <li>Unknown IPv6 multicast: defines the IPv6 unknown multicast forwarding   method.<ul> <li>Values: <code>flood</code> (flood), <code>opt-flood</code> (optimized flood)</li> <li>Default: <code>flood</code></li> </ul> </li> <li>Virtual MAC address: the virtual MAC address of the Bridge Domain / SVI   used when the Bridge Domain is extended to multiple sites using L2Outs.</li> <li>Comments: a text field for additional notes.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Bridge-Domain-Subnet","title":"Bridge Domain Subnet","text":"<p>A Bridge Domain Subnet is an anycast gateway IP address of the Bridge Domain. The Subnet must be linked to a Bridge Domain instance. One or more Subnets can be associated with a Bridge Domain, but only one Subnet can be preferred.</p> <p>The ACIBridgeDomainSubnet model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Bridge Domain name in the ACI.</li> <li>ACI Bridge Domain: a reference to the <code>ACIBridgeDomain</code> model.</li> <li>Gateway IP Address: the gateway IP address of the Bridge Domain   (referencing the NetBox IP address).</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the Bridge Domain Subnet.</li> <li>Description: a description of the Bridge Domain Subnet.</li> <li>NetBox Tenant: a reference to the NetBox tenant model.</li> <li>Advertised externally enabled: a boolean field, whether the subnet is   advertised to the outside to any associated L3Outs (public scope).<ul> <li>Default: <code>false</code></li> </ul> </li> <li>IGMP querier enabled: a boolean field specifying whether the gateway   IP address is treated as an IGMP querier source IP.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>IP data plane learning enabled: a boolean field representing whether   IP data plane learning is enabled for the Bridge Domain Subnet.<ul> <li>Default: <code>true</code></li> </ul> </li> <li>No default SVI gateway: a boolean field, if the default gateway   functionality of the address is removed.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>ND RA enabled: a boolean field, whether the gateway IP is treated as an   IPv6 Neighbor Discovery Router Advertisement prefix.<ul> <li>Default: <code>true</code></li> </ul> </li> <li>ND RA prefix policy name: the name of the Neighbor Discovery Router   Advertisement prefix policy.</li> <li>Preferred IP address enabled: a boolean field, if the gateway IP address   is the preferred (primary) IP gateway of the Bridge Domain.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Shared enabled: a boolean field, if endpoints can communicate only within   the same (disabled) or shared VRFs (enabled) in the ACI fabric   (inter-VRF route leaking).<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Virtual IP enabled: a boolean field determining if the gateway is a   virtual IP address (used for stretched Bridge Domains to multiple sites).<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Comments: a text field for additional notes.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Endpoint-Group","title":"Endpoint Group","text":"<p>An Endpoint Group (EPG) is a named collection of endpoints (network-connected devices). The EPG needs to be contained in an Application Profile and be linked to a Bridge Domain.</p> <p>The ACIEndpointGroup model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Endpoint Group name in the ACI.</li> <li>ACI Application Profile: containing the Endpoint Group.</li> <li>ACI Bridge Domain: linking the associated Bridge Domain.</li> </ul> <p>Optional fields:</p> <ul> <li>Name alias: a name alias in the ACI for the Endpoint Group.</li> <li>Description: a description of the Endpoint Group.</li> <li>NetBox Tenant: a reference to the NetBox tenant model.</li> <li>Admin shutdown: a boolean field, whether the EPG is in shutdown mode,   removing all policy configuration from all switches.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Custom QoS policy name: the name of the custom Quality of Service (Qos)   policy name associated with the EPG.</li> <li>Flood in encapsulation enabled: a boolean field representing whether the   flooding traffic is limited to the encapsulation of the EPG.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Intra-EPG isolation enabled: a boolean field, whether the communication   between endpoints in the EPG is prevented.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>QoS class: represents the assignment of the ACI Quality of Service (QoS)   level for traffic sourced in the EPG.<ul> <li>Values: <code>unspecified</code> (unspecified), <code>level1</code> (level 1),   <code>level2</code> (level 2), <code>level3</code> (level 3), <code>level4</code> (level 4),   <code>level5</code> (level 5), <code>level6</code> (level 6)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Preferred group member enabled: a boolean field, if the EPG is a member   of the preferred group and allows communication without contracts.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Proxy-ARP enabled: a boolean field, whether proxy ARP is enabled for the   EPG.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Comments: a text field for additional notes.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Contract-Filter","title":"Contract Filter","text":"<p>A Contract Filter in the ACI policy model represents a filter that contains multiple filter entries defining the type of traffic that is allowed or denied. Each Contract Filter is associated with a Tenant.</p> <p>The ACIContractFilter model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Contract Filter name in the ACI.</li> <li>ACI Tenant: a reference to the <code>ACITenant</code> model, associating the filter   with a specific tenant.</li> </ul> <p>Optional fields:</p> <ul> <li>Name Alias: an alias for the name of the filter in the ACI.</li> <li>Description: a brief description of the filter.</li> <li>NetBox Tenant: a reference to the NetBox tenant model, linking the filter   to a NetBox tenant.</li> <li>Comments: a text field for additional notes or comments.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Contract-Filter-Entry","title":"Contract Filter Entry","text":"<p>The ACIContractFilterEntry represents individual entries within a contract filter, specifying the types of traffic that either pass through or are blocked by the defined filter rules. One or more filters can be linked to the <code>ACIContractFilter</code> model.</p> <p>The ACIContractFilterEntry model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: the name of the filter entry in the Contract Filter.</li> <li>Contract Filter: a reference to the <code>ACIContractFilter</code> model,   associating the entry with a specific contract filter.</li> </ul> <p>Optional fields:</p> <ul> <li>Name Alias: an alias for the name of the filter entry.</li> <li>Description: a brief description of the filter entry.</li> <li>ARP OPC: specifies the ARP open peripheral codes for Ethernet Type <code>arp</code> (ARP).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>req</code> (ARP request),   <code>reply</code> (ARP reply)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Destination from-port: sets the start of the filter destination port   range, in case for IP Protocol <code>tcp</code> (TCP) or <code>udp</code> (UDP).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>dns</code> (DNS), <code>ftpData</code> (FTP Data),   <code>http</code> (HTTP), <code>https</code> (HTTPS), <code>pop3</code> (POP3), <code>rtsp</code> (RTSP),   <code>smtp</code> (SMTP), <code>ssh</code> (SSH) or in range of <code>0</code>\u2013<code>65535</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Destination to-port: sets the end of the filter destination port range,   in case for IP Protocol <code>tcp</code> (TCP) or <code>udp</code> (UDP).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>dns</code> (DNS), <code>ftpData</code> (FTP Data),   <code>http</code> (HTTP), <code>https</code> (HTTPS), <code>pop3</code> (POP3), <code>rtsp</code> (RTSP),   <code>smtp</code> (SMTP), <code>ssh</code> (SSH) or in range of <code>0</code>\u2013<code>65535</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Ethernet type: declares the matching Ethernet type for the Filter Entry.<ul> <li>Values: <code>unspecified</code> (unspecified), <code>arp</code> (ARP), <code>fcoe</code> (FCOE),   <code>ip</code> (IP), <code>ipv4</code> (IPv4), <code>ipv6</code> (IPv6), <code>mac_security</code> (MAC Security),   <code>mpls_ucast</code> (MPLS Unicast), <code>trill</code> (Trill)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>ICMP v4 type: matches the specified ICMPv4 message type for IP Protocol <code>icmp</code> (ICMPv4).<ul> <li>Values: <code>unspecified</code> (unspecified),   <code>dst-unreach</code> (destination unreachable), <code>echo</code> (echo request),   <code>echo-rep</code> (echo reply), <code>src-quench</code> (source quench),   <code>time-exceeded</code> (time exceeded)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>ICMP v6 type: matches the specified ICMPv6 message type for IP Protocol <code>icmpv6</code> (ICMPv6).<ul> <li>Values: <code>unspecified</code> (unspecified),   <code>dst-unreach</code> (destination unreachable), <code>echo-req</code> (echo request),   <code>echo-rep</code> (echo reply), <code>nbr-advert</code> (neighbor advertisement),   <code>nbr-solicit</code> (neighbor solicitation), <code>time-exceeded</code> (time exceeded)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>IP protocol: specifies the layer 3 IP protocol type for Ethernet Type <code>ip</code> (IP).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>egp</code> (EGP), <code>eigrp</code> (EIGRP),   <code>icmp</code> (ICMPv4), <code>icmpv6</code> (ICMPv6), <code>igmp</code> (IGMP), <code>igp</code> (IGP),   <code>l2tp</code> (L2TP), <code>ospfigp</code> (OSPF), <code>pim</code> (PIM), <code>tcp</code> (TCP), <code>udp</code> (UDP)   or in range of <code>0</code>-<code>255</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Match DSCP: matches the specific DSCP (Differentiated Services Code   Point) value for Ethernet Type <code>ip</code> (IP).<ul> <li>Values: <code>unspecified</code>, <code>AF11</code>, <code>AF12</code>, <code>AF13</code>, <code>AF21</code>, <code>AF22</code>, <code>AF23</code>,   <code>AF31</code>, <code>AF32</code>, <code>AF33</code>, <code>AF41</code>, <code>AF42</code>, <code>AF43</code>, <code>CS0</code>, <code>CS1</code>, <code>CS2</code>,   <code>CS3</code>, <code>CS4</code>, <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, <code>EF</code>, <code>VA</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Match only fragments enabled: represents whether the filter rule   matches only fragments with offset greater than 0 (all fragments except the   first one).<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Source from-port: sets the start of the filter source port range, in case   for IP Protocol <code>tcp</code> (TCP) or <code>udp</code> (UDP).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>dns</code> (DNS), <code>ftpData</code> (FTP Data),   <code>http</code> (HTTP), <code>https</code> (HTTPS), <code>pop3</code> (POP3), <code>rtsp</code> (RTSP),   <code>smtp</code> (SMTP), <code>ssh</code> (SSH) or in range of <code>0</code>\u2013<code>65535</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Source to-port: sets the end of the filter source port range, in case for   IP Protocol <code>tcp</code> (TCP) or <code>udp</code> (UDP).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>dns</code> (DNS), <code>ftpData</code> (FTP Data),   <code>http</code> (HTTP), <code>https</code> (HTTPS), <code>pop3</code> (POP3), <code>rtsp</code> (RTSP),   <code>smtp</code> (SMTP), <code>ssh</code> (SSH) or in range of <code>0</code>\u2013<code>65535</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Stateful enabled: allows TCP packets from provider to consumer only if   the TCP flack ACK is set for IP Protocol <code>tcp</code> (TCP).<ul> <li>Default: <code>false</code></li> </ul> </li> <li>TCP rules: specifies a list of matching TCP flag values for IP Protocol <code>tcp</code> (TCP).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>ack</code> (acknowledgement),   <code>est</code> (established), <code>fin</code> (finish), <code>rst</code> (reset), <code>syn</code> (synchronize)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Comments: A text field for additional notes or comments.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Contract","title":"Contract","text":"<p>A Contract defines a set of policies that govern how traffic is permitted or denied between endpoints. Contracts consist of one or more associated Contract Subjects that define the exact Contract Filters for allowed or denied traffic.</p> <p>Each Contract is associated with an ACI Tenant and is used to manage the communication between Consumers and Providers.</p> <p>The ACIContract model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Contract name in the ACI.</li> <li>ACI Tenant: a reference to the <code>ACITenant</code> model, associating the   contract with a specific tenant.</li> </ul> <p>Optional fields:</p> <ul> <li>Name Alias: an alias for the name of the contract in the ACI.</li> <li>Description: a brief description of the contract.</li> <li>NetBox Tenant: a reference to the NetBox tenant model, linking the   contract to a NetBox tenant.</li> <li>QoS class: specifies the priority handling, Quality of Service (QoS), for   traffic between Consumer and Provider within the fabric.<ul> <li>Values: <code>unspecified</code> (unspecified), <code>level1</code> (level 1),   <code>level2</code> (level 2), <code>level3</code> (level 3), <code>level4</code> (level 4),   <code>level5</code> (level 5), <code>level6</code> (level 6)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Scope: defines the extent within which the contract is applicable.<ul> <li>Values: <code>context</code> (VRF), <code>application-profile</code> (Application Profile),   <code>tenant</code> (Tenant), <code>global</code> (Global).</li> <li>Default: <code>context</code></li> </ul> </li> <li>Target DSCP: rewrites the DSCP (Differentiated Services Code Point) value   of the incoming traffic to the specified value.<ul> <li>Values: <code>unspecified</code>, <code>AF11</code>, <code>AF12</code>, <code>AF13</code>, <code>AF21</code>, <code>AF22</code>, <code>AF23</code>,   <code>AF31</code>, <code>AF32</code>, <code>AF33</code>, <code>AF41</code>, <code>AF42</code>, <code>AF43</code>, <code>CS0</code>, <code>CS1</code>, <code>CS2</code>,   <code>CS3</code>, <code>CS4</code>, <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, <code>EF</code>, <code>VA</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Comments: a text field for additional notes or comments.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Contract-Relation","title":"Contract Relation","text":"<p>A Contract Relation links a Contract to specific ACI objects such as Endpoint Groups (EPG) or Virtual Routing and Forwarding (VRF) instances. A Contract Relation specifies the role of a given Contract for an associated ACI object, either as a Provider or a Consumer. Both the Contract and the associated ACI object must belong to the same ACI Tenant.</p> <p>The ACIContractRelation model has the following fields:</p> <p>Required fields:</p> <ul> <li>ACI Contract: a reference to the related <code>ACIContract</code> model.   This defines the Contract associated with the relation.</li> <li>ACI Object Type: the type of the target ACI object (e.g.,   Endpoint Group or VRF) in the form <code>app.model</code>.<ul> <li>Values: <code>netbox_aci_plugin.aciendpointgroup</code> (Endpoint Group),   <code>netbox_aci_plugin.acivrf</code> (VRF)</li> </ul> </li> <li>ACI Object ID: represents the (database) identifier for the specific   ACI object.</li> </ul> <p>Optional fields:</p> <ul> <li>Role: specifies the role of the Contract for the associated ACI object.<ul> <li>Values: <code>prov</code> (Provider), <code>cons</code> (Consumer)</li> <li>Default: <code>prov</code></li> </ul> </li> <li>Comments: a text field for additional notes or comments.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Contract-Subject","title":"Contract Subject","text":"<p>A Contract Subject defines how contract filters and service graph templates are applied within a Contract. Each Subject is associated with an ACI Contract.</p> <p>The ACIContractSubject model has the following fields:</p> <p>Required fields:</p> <ul> <li>Name: represent the Contract Subject name in the ACI.</li> <li>ACI Contract: a reference to the <code>ACIContract</code> model, associating the   subject with a specific contract.</li> </ul> <p>Optional fields:</p> <ul> <li>Name Alias: an alias for the name of the subject in the ACI.</li> <li>Description: a brief description of the subject.</li> <li>NetBox Tenant: a reference to the NetBox tenant model, linking the   subject to a NetBox tenant.</li> <li>Apply both directions enabled: indicates whether the filter associated   with the subject is applied in both directions   (consumer-to-provider and provider-to-consumer).<ul> <li>Default: <code>true</code></li> </ul> </li> <li>QoS class: specifies the priority handling, Quality of Service (QoS), for   traffic between Consumer and Provider within the fabric.<ul> <li>Values: <code>unspecified</code> (unspecified), <code>level1</code> (level 1),   <code>level2</code> (level 2), <code>level3</code> (level 3), <code>level4</code> (level 4),   <code>level5</code> (level 5), <code>level6</code> (level 6)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>QoS class Consumer to Provider: specifies the priority handling,   Quality of Service (QoS), for traffic from Consumer to Provider within the   fabric (for disabled <code>apply_both_directions_enabled</code>).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>level1</code> (level 1),   <code>level2</code> (level 2), <code>level3</code> (level 3), <code>level4</code> (level 4),   <code>level5</code> (level 5), <code>level6</code> (level 6)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>QoS class Provider to Consumer: specifies the priority handling,   Quality of Service (QoS), for traffic from Provider to Consumer within the   fabric (for disabled <code>apply_both_directions_enabled</code>).<ul> <li>Values: <code>unspecified</code> (unspecified), <code>level1</code> (level 1),   <code>level2</code> (level 2), <code>level3</code> (level 3), <code>level4</code> (level 4),   <code>level5</code> (level 5), <code>level6</code> (level 6)</li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Reverse filter ports enabled: Indicates whether the source and   destination ports of the associated filter within the subject are reversed   for the return traffic.<ul> <li>Default: <code>true</code></li> </ul> </li> <li>Service Graph name: the name of the Service Graph Template   associated with the subject.</li> <li>Service Graph name Consumer to Provider: the name of the Service Graph   Template associated with the subject for traffic from Consumer to   Provider (for disabled <code>apply_both_directions_enabled</code>).</li> <li>Service Graph name Provider to Consumer: the name of the Service Graph   Template associated with the subject for traffic from Provider to   Consumer (for disabled <code>apply_both_directions_enabled</code>).</li> <li>Target DSCP: rewrites the DSCP (Differentiated Services Code Point) value   of the incoming traffic to the specified value.<ul> <li>Values: <code>unspecified</code>, <code>AF11</code>, <code>AF12</code>, <code>AF13</code>, <code>AF21</code>, <code>AF22</code>, <code>AF23</code>,   <code>AF31</code>, <code>AF32</code>, <code>AF33</code>, <code>AF41</code>, <code>AF42</code>, <code>AF43</code>, <code>CS0</code>, <code>CS1</code>, <code>CS2</code>,   <code>CS3</code>, <code>CS4</code>, <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, <code>EF</code>, <code>VA</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Target DSCP Consumer to Provider: rewrites the DSCP (Differentiated   Services Code Point) value of the incoming traffic to the specified value   for traffic from Consumer to Provider within the fabric   (for disabled <code>apply_both_directions_enabled</code>).<ul> <li>Values: <code>unspecified</code>, <code>AF11</code>, <code>AF12</code>, <code>AF13</code>, <code>AF21</code>, <code>AF22</code>, <code>AF23</code>,   <code>AF31</code>, <code>AF32</code>, <code>AF33</code>, <code>AF41</code>, <code>AF42</code>, <code>AF43</code>, <code>CS0</code>, <code>CS1</code>, <code>CS2</code>,   <code>CS3</code>, <code>CS4</code>, <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, <code>EF</code>, <code>VA</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Target DSCP Provider to Consumer: rewrites the DSCP (Differentiated   Services Code Point) value of the incoming traffic to the specified value   for traffic from Provider to Consumer within the fabric   (for disabled <code>apply_both_directions_enabled</code>).<ul> <li>Values: <code>unspecified</code>, <code>AF11</code>, <code>AF12</code>, <code>AF13</code>, <code>AF21</code>, <code>AF22</code>, <code>AF23</code>,   <code>AF31</code>, <code>AF32</code>, <code>AF33</code>, <code>AF41</code>, <code>AF42</code>, <code>AF43</code>, <code>CS0</code>, <code>CS1</code>, <code>CS2</code>,   <code>CS3</code>, <code>CS4</code>, <code>CS5</code>, <code>CS6</code>, <code>CS7</code>, <code>EF</code>, <code>VA</code></li> <li>Default: <code>unspecified</code></li> </ul> </li> <li>Comments: a text field for additional notes or comments.</li> <li>Tags: a list of NetBox tags.</li> </ul>"},{"location":"features/tenants/#Contract-Subject-Filter","title":"Contract Subject Filter","text":"<p>The Contract Subject Filter defines the association of a Contract Filter with a Contract Subject. It specifies how the filter is applied to traffic between consumer and provider endpoints.</p> <p>The ACIContractSubjectFilter model has the following fields:</p> <p>Required fields:</p> <ul> <li>ACI Contract Filter: links to the associated <code>ACIContractFilter</code> model.</li> <li>ACI Contract Subject: ties the filter to the <code>ACIContractSubject</code> model,   associating the given filter with a specific ACI Contract Subject.</li> </ul> <p>Optional fields:</p> <ul> <li>Action: determines whether the traffic is permitted or denied.<ul> <li>Values: <code>permit</code>, <code>deny</code></li> <li>Default: <code>permit</code></li> </ul> </li> <li>Apply direction: specifies the direction to apply the filter.<ul> <li>Values: <code>both</code> (both directions), <code>ctp</code> (consumer to provider),   <code>ptc</code> (provider to consumer)</li> <li>Default: <code>both</code></li> </ul> </li> <li>Log enabled: indicates whether logging is enabled for the applied filter.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Policy Compression enabled: specifies whether policy-based compression   for filtering is enabled.   This reduces the number of rules in the TCAM.<ul> <li>Default: <code>false</code></li> </ul> </li> <li>Priority: sets the priority of deny actions.   The value is only valid for action <code>deny</code>.<ul> <li>Values: <code>default</code> (default level), <code>level1</code> (level 1),   <code>level2</code> (level 2), <code>level3</code> (level 3)</li> <li>Default: <code>default</code></li> </ul> </li> <li>Comments: a text field for additional notes or comments.</li> <li>Tags: a list of NetBox tags.</li> </ul>"}]}